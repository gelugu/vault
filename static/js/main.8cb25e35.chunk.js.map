{"version":3,"sources":["config/firebase.js","components/Input.js","pages/Read.js","pages/Write.js","Router.js","App.js","index.js"],"names":["firebaseConfig","apiKey","process","REACT_APP_FIREBASE_VAULT_API_KEY","authDomain","databaseURL","REACT_APP_FIREBASE_VAULT_DATABASE_URL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","auth","getAuth","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","then","result","credential","credentialFromResult","token","accessToken","user","console","log","catch","error","errorCode","code","errorMessage","message","email","credentialFromError","logout","signOut","database","getDatabase","read","key","a","dbRef","ref","get","child","currentUser","uid","btoa","snapshot","exists","atob","val","value","Input","navigate","useNavigate","useState","currentKey","setCurrentKey","word","setWord","colors","text","color","setColor","position","setPosition","loader","setLoader","getRandomPosition","useCallback","getRandomValue","Math","floor","random","x","y","clear","backspace","slice","length","doAction","actions","exit","write","submit","onFunctionalKeyPress","functionalKey","functionalKeys","Escape","Backspace","Enter","onKeyPress","event","exec","warn","useEffect","document","addEventListener","removeEventListener","toPosition","borderColor","secondary","Read","Write","setKey","setValue","direction","positionY","placeholder","onChange","target","onClick","set","type","Router","path","exact","element","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8cb25e35.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, child, set, get } from \"firebase/database\";\nimport {\n  getAuth,\n  GoogleAuthProvider,\n  signInWithPopup,\n  signOut,\n} from \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_VAULT_API_KEY,\n  authDomain: \"gelugu-vault.firebaseapp.com\",\n  databaseURL: process.env.REACT_APP_FIREBASE_VAULT_DATABASE_URL,\n  projectId: \"gelugu-vault\",\n  storageBucket: \"gelugu-vault.appspot.com\",\n  messagingSenderId: \"887180943043\",\n  appId: \"1:887180943043:web:25df0f6628a092f3de0c76\",\n  measurementId: \"G-Y00RVNTE0X\",\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\n\nconst provider = new GoogleAuthProvider();\n\nexport const signInWithGoogle = () => {\n  signInWithPopup(auth, provider)\n    .then((result) => {\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      const user = result.user;\n\n      console.log(credential, token, user);\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      const email = error.email;\n      const credential = GoogleAuthProvider.credentialFromError(error);\n\n      console.log(errorCode, errorMessage, email, credential);\n    });\n};\n\nexport const logout = () => {\n  signOut(auth)\n    .then(() => {\n      console.log(\"Loged out\");\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nexport const database = getDatabase(app);\n\nexport const write = (key, value) => {\n  set(ref(database, \"users/\" + auth.currentUser.uid + \"/\" + btoa(key)), {\n    value: btoa(value),\n  });\n};\n\nexport const read = async (key) => {\n  const dbRef = ref(database);\n\n  return get(child(dbRef, `users/${auth.currentUser.uid}/${btoa(key)}`))\n    .then((snapshot) => {\n      if (snapshot.exists()) {\n        return atob(snapshot.val().value);\n      } else {\n        console.error(\"No data available\");\n      }\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n","import { colors, FloatAnimation, View } from \"@gelugu/react-uikit\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { auth, signInWithGoogle, logout, read } from \"../config/firebase\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const Input = () => {\n  const navigate = useNavigate();\n\n  const [currentKey, setCurrentKey] = useState(\"\");\n  const [word, setWord] = useState(\"\");\n  const [color, setColor] = useState(colors.text);\n  const [position, setPosition] = useState();\n  const [loader, setLoader] = useState(false);\n\n  const getRandomPosition = useCallback(() => {\n    const getRandomValue = () => Math.floor(Math.random() * 100);\n\n    return {\n      x: getRandomValue(),\n      y: getRandomValue(),\n    };\n  }, []);\n\n  const clear = useCallback(() => {\n    setWord(\"\");\n    setCurrentKey(\"\");\n  }, []);\n\n  const backspace = useCallback(() => {\n    setWord(word.slice(0, -1) || \"\");\n    setCurrentKey(word[word.length - 2] || \"\");\n\n    setPosition(getRandomPosition());\n  }, [word, getRandomPosition]);\n\n  const doAction = useCallback(() => {\n    const actions = {\n      auth: signInWithGoogle,\n      exit: logout,\n      write: () => {\n        navigate(\"write\");\n      },\n    };\n\n    try {\n      setLoader(true);\n\n      actions[word.slice(1, word.length)]();\n\n      clear();\n\n      return true;\n    } catch {\n      return false;\n    } finally {\n      setLoader(false);\n    }\n  }, [navigate, clear, word]);\n\n  const submit = useCallback(async () => {\n    if (word[0] === \":\") {\n      doAction();\n\n      return;\n    }\n\n    if (!auth.currentUser) {\n      console.error(\"Not authorized\");\n\n      clear();\n\n      return;\n    }\n\n    if (!word) {\n      // ToDo: visulize it\n    }\n\n    try {\n      setLoader(true);\n\n      console.log(await read(word));\n\n      return word;\n    } finally {\n      setLoader(false);\n      clear();\n    }\n  }, [word, clear, doAction]);\n\n  const onFunctionalKeyPress = useCallback(\n    (functionalKey) => {\n      const functionalKeys = {\n        Escape: clear,\n        Backspace: backspace,\n        Enter: submit,\n      };\n\n      try {\n        functionalKeys[functionalKey]();\n        return true;\n      } catch {\n        return false;\n      }\n    },\n    [clear, backspace, submit]\n  );\n\n  const onKeyPress = useCallback(\n    (event) => {\n      if (onFunctionalKeyPress(event.key)) return;\n\n      const allowedKeys = /^[a-zA-Z0-9:]+$/;\n\n      setCurrentKey(event.key);\n\n      if (allowedKeys.exec(event.key)) {\n        setPosition(getRandomPosition());\n        setWord(word + event.key);\n        setColor(colors.text);\n      } else {\n        setColor(colors.warn);\n      }\n    },\n    [word, onFunctionalKeyPress, getRandomPosition]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"keypress\", onKeyPress);\n\n    return () => document.removeEventListener(\"keypress\", onKeyPress);\n  }, [onKeyPress]);\n\n  return (\n    <FloatAnimation toPosition={position}>\n      {currentKey && <View borderColor={color}>{currentKey}</View>}\n      {loader && <View borderColor={colors.secondary}>{\"Loading...\"}</View>}\n    </FloatAnimation>\n  );\n};\n","import React from \"react\";\nimport { Input } from \"../components/Input\";\n\nexport const Read = () => {\n  return <Input />;\n};\n","import React, { useState } from \"react\";\nimport { View, Input, Button } from \"@gelugu/react-uikit\";\nimport { auth, signInWithGoogle, write } from \"../config/firebase\";\n\nexport const Write = () => {\n  const [key, setKey] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n\n  const keyChange = ({ target }) => {\n    setKey(target.value);\n  };\n\n  const valueChange = ({ target }) => {\n    setValue(target.value);\n  };\n\n  const send = () => {\n    if (!auth.currentUser) {\n      signInWithGoogle();\n      return;\n    }\n\n    if (!key || !value) return;\n\n    write(key, value);\n    setKey(\"\");\n    setValue(\"\");\n  };\n\n  return (\n    <View direction=\"column\" positionY=\"center\">\n      <Input placeholder=\"key\" onChange={keyChange} value={key} />\n      <Button onClick={send}>:</Button>\n      <Input\n        placeholder=\"value\"\n        onChange={valueChange}\n        value={value}\n        type=\"password\"\n      />\n    </View>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Read } from \"./pages/Read\";\nimport { Write } from \"./pages/Write\";\n\nexport const Router = () => {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" exact element={<Read />} />\n        <Route path=\"/write\" exact element={<Write />} />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n","import { WebLayout } from \"@gelugu/react-uikit\";\nimport { Router } from \"./Router\";\n\nfunction App() {\n  return (\n    <WebLayout positionY=\"center\">\n      <Router />\n    </WebLayout>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}